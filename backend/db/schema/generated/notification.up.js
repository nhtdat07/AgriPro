require('dotenv').config({ path: require('path').resolve(__dirname, '../../../.env') });
const { Pool } = require('pg');
const pool = new Pool({ connectionString: process.env.DATABASE_URL });

/**
 * Executes the 'createTableNotification' query.
 * @param {Object} params - Parameters for the query.
 * @returns {Promise<Array>} - Query result rows.
 */
async function createTableNotification(params = {}) {
    try {
        const query = `DO $$ 
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'noti_type') THEN
        CREATE TYPE "noti_type" AS ENUM (
          'CẢNH BÁO HẾT HÀNG',
          'CẢNH BÁO HẾT HẠN SỬ DỤNG',
          'GHI NHẬN THÀNH CÔNG',
          'CẢNH BÁO THIẾU THÔNG TIN'
        );
    END IF;
END $$;

CREATE TABLE IF NOT EXISTS notification (
  "auto_id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "id" char(6) UNIQUE NOT NULL,
  "agency_id" char(6) NOT NULL,
  "category" noti_type NOT NULL,
  "content" text NOT NULL,
  "timestamp" timestamp NOT NULL DEFAULT current_timestamp,
  "is_read" bool NOT NULL DEFAULT false
);

CREATE OR REPLACE FUNCTION set_custom_notification_id()
RETURNS TRIGGER AS $$
BEGIN
    NEW.id := 'SI' || LPAD(NEW.auto_id::text, 4, '0');
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE TRIGGER set_notification_id
BEFORE INSERT ON notification
FOR EACH ROW
EXECUTE FUNCTION set_custom_notification_id();`;
        const { rows } = await pool.query(query, Object.values(params));
        return rows;
    } catch (error) {
        console.error('Error executing createTableNotification:', error);
        throw error;
    }
}


module.exports = { createTableNotification };
